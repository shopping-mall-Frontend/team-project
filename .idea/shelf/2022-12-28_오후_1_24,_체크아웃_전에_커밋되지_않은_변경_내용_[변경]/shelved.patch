Index: src/components/Header.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {useEffect, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../css/reset-css.css\";\r\n\r\nconst Header = () => {\r\n  const accessToken = window.localStorage.getItem(\"accessToken\");\r\n\r\n  const [isLogin, setIsLogin] = useState(\r\n    window.localStorage.getItem(\"accessToken\") !== \"\"\r\n  );\r\n\r\n  console.log(accessToken);\r\n\r\n  const validLogin = async () => {\r\n    try {\r\n      const instance = axios.create({\r\n        baseURL:\r\n          \"https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          apikey: \"FcKdtJs202209\",\r\n          \"username\": \"KDT3_teamOT\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      const response = (await instance.post(\"/me\")).data;\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setIsLogin(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    validLogin();\r\n    console.log(\"하이\");\r\n  }, []);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      console.log(isLogin);\r\n      const instance = axios.create({\r\n        baseURL:\r\n          \"https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          apikey: \"FcKdtJs202209\",\r\n          \"username\": \"KDT3_teamOT\",\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      const response = (await instance.post(\"/logout\")).data;\r\n      window.localStorage.setItem(\"accessToken\", \"\");\r\n      console.log(response);\r\n      setIsLogin(false);\r\n    } catch (err) {\r\n      alert(\"로그아웃 실패.\");\r\n      console.log(\"실패\");\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <div className=\"header\">\r\n        <div className='header-left'>\r\n          <input type=\"text\" placeholder=\"Enter item to be searched\" onChange={(e) => this.searchSpace(e)}/>\r\n        </div>\r\n        <div className=\"header-center\">\r\n          <Link to={\"/\"} className=\"nav-logo-link\">\r\n            N4\r\n          </Link>\r\n        </div>\r\n        {/* 요건 잠시만기다려주세용ㅎㅎㅎㅎ */}\r\n        {isLogin ? (\r\n          <>\r\n            <button type=\"button\" onClick={logout}>\r\n              로그아웃\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Link to={\"/login\"} className=\"nav-menu-side\">Login/out</Link>\r\n            <Link to={\"/Cart\"} className=\"nav-menu-side\">Chart</Link>        </>\r\n        )}\r\n      </div>\r\n\r\n      <StyledCategory>\r\n        <ul>\r\n          <li><Link to={\"/category\"} className=\"nav-menu-category\">Category</Link></li>\r\n          {/* {아직 아래 카테고리 미정} */}\r\n          <li><Link to={\"/category\"} className=\"nav-menu-category\">Category</Link></li>\r\n          <li><Link to={\"/category\"} className=\"nav-menu-category\">Category</Link></li>\r\n          <li><Link to={\"/category\"} className=\"nav-menu-category\">Category</Link></li>\r\n        </ul>\r\n        <div className=\"categoryList\">\r\n\r\n        </div>\r\n\r\n      </StyledCategory>\r\n    </StyledHeader>\r\n\r\n  );\r\n};\r\n\r\nconst StyledHeader = styled.div`\r\n  flex-wrap: wrap;\r\n  font-family: 'Marcellus', serif;\r\n  display: flex;\r\n  margin: 30px;\r\n  .header {\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    margin: 0;\r\n    padding-right: 19rem;\r\n    padding-left: 10rem;\r\n    display: flex;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    font-weight: bold;\r\n  }\r\n  .nav-logo-link {\r\n    font-size: 50px;\r\n    margin-left: 2.5em;\r\n    padding-left: 2.50em;\r\n  }\r\n  input {\r\n    color: gray;\r\n    margin: 0 auto;\r\n    width: 11rem;\r\n    height: 3rem;\r\n    text-align: center;\r\n    font-size: 9px;\r\n    border: 0;\r\n    border-radius: 15px;\r\n    outline: none;\r\n    padding-left: 10px;\r\n    background-color: gainsboro;\r\n  }\r\n  .nav-menu-side {\r\n    font-weight: 400;\r\n    color: gray;\r\n  }\r\n`;\r\n\r\nconst StyledCategory = styled.div`\r\n  ul {\r\n    font-family: 'Marcellus', serif;\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 0rem 0rem 0rem 0rem;\r\n    padding: 2rem 40rem;\r\n    text-decoration: none;\r\n    @media screen and (max-width: 500px) {\r\n      display: none;\r\n    }\r\n    li {\r\n      padding-left: 40px;\r\n      color: darkGray;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Header;
===================================================================
diff --git a/src/components/Header.js b/src/components/Header.js
--- a/src/components/Header.js	
+++ b/src/components/Header.js	
@@ -1,14 +1,14 @@
-import React, {useEffect, useState} from "react";
-import styled from "styled-components";
-import {Link} from "react-router-dom";
-import axios from "axios";
-import "../css/reset-css.css";
+import React, {useEffect, useState} from 'react';
+import styled from 'styled-components';
+import {Link} from 'react-router-dom';
+import axios from 'axios';
+import '../css/reset-css.css';
 
-const Header = () => {
-  const accessToken = window.localStorage.getItem("accessToken");
+const Header = React.memo(() => {
+  const accessToken = window.localStorage.getItem('accessToken');
 
   const [isLogin, setIsLogin] = useState(
-    window.localStorage.getItem("accessToken") !== ""
+    window.localStorage.getItem('accessToken') !== ''
   );
 
   console.log(accessToken);
@@ -17,15 +17,15 @@
     try {
       const instance = axios.create({
         baseURL:
-          "https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth",
+          'https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth',
         headers: {
-          "content-type": "application/json",
-          apikey: "FcKdtJs202209",
-          "username": "KDT3_teamOT",
+          'content-type': 'application/json',
+          apikey: 'FcKdtJs202209',
+          username: 'KDT3_teamOT',
           Authorization: `Bearer ${accessToken}`,
         },
       });
-      const response = (await instance.post("/me")).data;
+      const response = (await instance.post('/me')).data;
       console.log(response);
     } catch (err) {
       console.log(err);
@@ -35,7 +35,7 @@
 
   useEffect(() => {
     validLogin();
-    console.log("하이");
+    console.log('하이');
   }, []);
 
   const logout = async () => {
@@ -43,123 +43,132 @@
       console.log(isLogin);
       const instance = axios.create({
         baseURL:
-          "https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth",
+          'https://asia-northeast3-heropy-api.cloudfunctions.net/api/auth',
         headers: {
-          "content-type": "application/json",
-          apikey: "FcKdtJs202209",
-          "username": "KDT3_teamOT",
+          'content-type': 'application/json',
+          apikey: 'FcKdtJs202209',
+          username: 'KDT3_teamOT',
           Authorization: `Bearer ${accessToken}`,
         },
       });
-      const response = (await instance.post("/logout")).data;
-      window.localStorage.setItem("accessToken", "");
+      const response = (await instance.post('/logout')).data;
+      window.localStorage.setItem('accessToken', '');
       console.log(response);
       setIsLogin(false);
     } catch (err) {
-      alert("로그아웃 실패.");
-      console.log("실패");
+      alert('로그아웃 실패.');
+      console.log('실패');
     }
   };
-
 
   return (
     <StyledHeader>
-      <div className="header">
-        <div className='header-left'>
-          <input type="text" placeholder="Enter item to be searched" onChange={(e) => this.searchSpace(e)}/>
+      <nav className="navbar">
+        <div className="navbar-left">{
+          <input
+            type="text"
+            placeholder="Enter item to be searched"
+            onChange={(e) => this.searchSpace(e)}
+          />
+        }
         </div>
-        <div className="header-center">
-          <Link to={"/"} className="nav-logo-link">
-            N4
-          </Link>
-        </div>
-        {/* 요건 잠시만기다려주세용ㅎㅎㅎㅎ */}
-        {isLogin ? (
-          <>
-            <button type="button" onClick={logout}>
-              로그아웃
-            </button>
-          </>
-        ) : (
-          <>
-            <Link to={"/login"} className="nav-menu-side">Login/out</Link>
-            <Link to={"/Cart"} className="nav-menu-side">Chart</Link>        </>
-        )}
-      </div>
-
-      <StyledCategory>
-        <ul>
-          <li><Link to={"/category"} className="nav-menu-category">Category</Link></li>
-          {/* {아직 아래 카테고리 미정} */}
-          <li><Link to={"/category"} className="nav-menu-category">Category</Link></li>
-          <li><Link to={"/category"} className="nav-menu-category">Category</Link></li>
-          <li><Link to={"/category"} className="nav-menu-category">Category</Link></li>
-        </ul>
-        <div className="categoryList">
-
-        </div>
-
-      </StyledCategory>
+
+        <div className="navbar-logo center"></div>
+        <Link to={'/'} className="navbar-logo">
+          N4
+        </Link>
+        <ul className="navbar-right">
+          <li>
+            <Link to={'/login'}>
+              Login/out
+            </Link>
+          </li>
+          <li>
+            <Link to={'/Cart'}>
+              Chart
+            </Link>{' '}
+          </li>
+        </ul>
+      </nav>
+  <StyledCategory>
+    <ul className="category">
+      <li>
+        <Link to={'/category'}>category </Link>
+      </li>
+      <li>
+        <Link to={'/category'}>category </Link>
+      </li>
+      <li>
+        <Link to={'/category'}>category </Link>
+      </li>
+    </ul>
+  </StyledCategory>
     </StyledHeader>
 
   );
-};
+});
 
 const StyledHeader = styled.div`
-  flex-wrap: wrap;
-  font-family: 'Marcellus', serif;
-  display: flex;
-  margin: 30px;
-  .header {
+  .navbar {
+    font-family: 'Marcellus', serif;
     justify-content: space-between;
-    width: 100%;
+    display: flex;
+    align-items: center;
+    padding: 22px 1px;
+    width: 90%;
     margin: 0;
-    padding-right: 19rem;
-    padding-left: 10rem;
+    
+  }
+  .navbar-logo {
+    padding-right:200px;
+    font-size: 2rem;
+  }
+  .navbar-right {
     display: flex;
-    text-align: center;
-    text-decoration: none;
-    font-weight: bold;
-  }
-  .nav-logo-link {
-    font-size: 50px;
-    margin-left: 2.5em;
-    padding-left: 2.50em;
-  }
-  input {
-    color: gray;
-    margin: 0 auto;
-    width: 11rem;
-    height: 3rem;
-    text-align: center;
-    font-size: 9px;
-    border: 0;
-    border-radius: 15px;
-    outline: none;
-    padding-left: 10px;
-    background-color: gainsboro;
-  }
-  .nav-menu-side {
-    font-weight: 400;
-    color: gray;
+    width: 15%;
+    justify-content: flex-end;
+  }
+  li {
+    padding: 20px;
+  }
+  .navbar-left {
+    margin-left: 100px;
+  }
+  @media screen and (max-width: 768px) {
+    .navbar {
+      flex-direction: column;
+      text-align: center;
+      width: 100%;
+    }
+    .navbar-left {
+      display: none;
+    }
+    li {
+      display: inline-block;
+      padding: 10px;
+    }
+    .navbar-logo {
+      align-items: center;
+      padding: 8px 24px;
+      text-align: center;
+      width: 100%;
+      height: 100%;
+    }
+    .navbar-right {
+      display: none;
+      justify-content: center;
+      width: 100%;
+      margin-right: 10px;
+    }
   }
 `;
-
 const StyledCategory = styled.div`
-  ul {
-    font-family: 'Marcellus', serif;
+  .category {
     display: flex;
+    flex-direction: row;
     justify-content: center;
-    margin: 0rem 0rem 0rem 0rem;
-    padding: 2rem 40rem;
-    text-decoration: none;
-    @media screen and (max-width: 500px) {
-      display: none;
-    }
-    li {
-      padding-left: 40px;
-      color: darkGray;
-    }
+    text-align: center;
+    margin-left: 100px;
   }
 `;
 
